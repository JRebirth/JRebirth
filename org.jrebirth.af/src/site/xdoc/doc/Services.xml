<!DOCTYPE document [
        <!-- These are the entity sets for ISO Latin 1 characters for the XHTML -->
        <!ENTITY % HTMLlat1 PUBLIC "-//W3C//ENTITIES Latin 1 for XHTML//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent">
        %HTMLlat1;
        <!-- These are the entity sets for special characters for the XHTML -->
        <!ENTITY % HTMLsymbol PUBLIC "-//W3C//ENTITIES Symbols for XHTML//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml-symbol.ent">
        %HTMLsymbol;
        <!-- These are the entity sets for symbol characters for the XHTML -->
        <!ENTITY % HTMLspecial PUBLIC "-//W3C//ENTITIES Special for XHTML//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml-special.ent">
        %HTMLspecial;
        ]>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <properties>
        <title>Services</title>
    </properties>

    <head>
        <title></title>
        <link rel="stylesheet" type="text/css" href="../css/shCoreEclipse.css" media="all"/>
    </head>

    <body>

        <div class="toc">
            <macro name="toc">
                <param name="section" value="0"/>
                <param name="fromDepth" value="0"/>
                <param name="toDepth" value="3"/>
            </macro>
        </div>

        <section name="Services">

            <div id="catcherTitle">Service Layer</div>
            <div id="catcherContent">Process configurable action</div>

            <subsection name="Overview">
                <p>A Service Object is a JRebirth Component (part of CSM pattern, Command-Service-Model).
                    <br/>
                    It can be retrieved from the <em>ServiceFacade</em>.
                </p>

                <p>A
                    <em>Service</em>
                    can hold several Tasks defined by a <em>WaveType</em>.
                    Each Task requires:
                </p>
                <ol>
                    <li>Define Call Wave Type (entry point)</li>
                    <li>Define Return Wave Type (exit point)</li>
                    <li>Register the Callback</li>
                    <li>Define the Task process into the right method name.</li>
                </ol>

                <p>That's all ! You don't have to bother about threading issues and asynchronous tasks.</p>

                <p>
                    <strong>Warning:</strong>
                    <br/>
                    You must pay attention to the lifecycle of your service instance. As a JRebirth Component, each
                    service object is eligible
                    to garbage collection if it isn't retained by another object currently used.
                    <br/>

                    So your data stored or processed into your service can be loss if you didn't manage correctly your
                    Service life.
                    <br/>

                    The most easy way is to hold your service with a strong reference into a long-living object like a
                    top-level<em>Model</em>.
                </p>

                <p>
                    <span style="text-decoration: underline;">Short UML Diagram:</span>
                </p>

                <div class="uml">
                    <a href="uml/Service.png" rel="lightbox[uml]" title="Service Class Diagram">
                        <img class="redux" src="uml/Service.png" alt=""/>
                    </a>
                    <legend>Service Class Diagram</legend>
                </div>
            </subsection>


            <subsection name="Defining Wave Types">

                <h4>Entry Point Wave Type</h4>

                <p>This is the
                    <em>WaveType</em>
                    used to process a Wave generated anywhere into the application.
                    <br/>

                </p>

                <macro name="include">
               		<param name="highlight-theme" value="eclipse"/>
                    <param name="source"
                           value="showcase/analyzer/src/main/java/org/jrebirth/af/showcase/analyzer/service/LoadEdtFileService.java"/>
                    <param name="snippet" value="re:DO_LOAD_EVENTS ="/>
                    <param name="snippet-start-offset" value="1"/>
                    <param name="snippet-end-offset" value="3"/>
                </macro>

                <p>This
                    <em>WaveType</em>
                    uses only one
                    <em>WaveItem</em>
                    to store the file that must be loaded.
                    WaveItem wrap the type of the object we want to use, thus it's possible to check that API contract
                    isn't broken.
                </p>

                <macro name="include">
                    <param name="source"
                           value="showcase/analyzer/src/main/java/org/jrebirth/af/showcase/analyzer/ui/editor/EditorWaves.java"/>
                    <param name="snippet" value="re:EVENTS_FILE ="/>
                    <param name="snippet-start-offset" value="1"/>
                    <param name="snippet-end-offset" value="1"/>
                </macro>

                <h4>Exit Point Wave Type</h4>

               <p>The return Wave Type is automatically created with by the using the <em>returnAction</em> value with <em>returnItem</em> as <b>WaveItem</b>.
               The code above will generate a <b>WaveType</b> that
                    uses only one WaveItem to store the list of events loaded from the given file.
               </p>


                <macro name="include">
                    <param name="source"
                           value="showcase/analyzer/src/main/java/org/jrebirth/af/showcase/analyzer/ui/editor/EditorWaves.java"/>
                    <param name="snippet" value="re:EVENTS ="/>
                    <param name="snippet-start-offset" value="1"/>
                    <param name="snippet-end-offset" value="1"/>
                </macro>


            </subsection>


            <subsection name="Task Registration">

                <p>Each Task requires to be registered in order to generate the right WaveType that wrap the return
                    value.
                    <br/>
                    This registration must be done into the JRebirth's Component
                    <strong>void initService()</strong>
                    method like this:
                </p>

                <macro name="include">
                    <param name="source"
                           value="showcase/analyzer/src/main/java/org/jrebirth/af/showcase/analyzer/service/impl/LoadEdtFileServiceImpl.java"/>
                    <param name="snippet" value="aj:....LoadEdtFileServiceImpl.initService(..)"/>
                    <!--<param name="snippet-start-offset" value="3" />-->
                    <param name="highlight-lines" value="grep:listen"/>
                </macro>

                <p>If you don't declare the return
                    <b>WaveType</b>
                    a exception will be thrown at runtime when trying
                    to send back the Service Task output.
                </p>

                <p>If your Service Task doesn't return anything (void return) you can dismiss this step except if you want to receive an empty notification when the Job is done; just use <em>JRebirthItems.voidItem</em>.</p>
                

            </subsection>

            <subsection name="Perform the Job!">


                <macro name="include">
                    <param name="source"
                           value="showcase/analyzer/src/main/java/org/jrebirth/af/showcase/analyzer/service/impl/LoadEdtFileServiceImpl.java"/>
                    <param name="snippet" value="aj:....LoadEdtFileServiceImpl.doLoadEvents(..)"/>
                    <param name="snippet-start-offset" value="8"/>
                </macro>


            </subsection>

        </section>

        <section name="How to use the Service Feature">

            <subsection name="Call the Service">

                <p>To call this <strong>Service Feature</strong>, you can use the
                    <em>returnData</em>
                    from any JRebirth's Component.
                    It takes at least 2 mandatory arguments:

                </p>
                <ol>
                    <li>The Service Class Object</li>
                    <li>The WaveType that is related to the Service Feature</li>
                    <li>An unordered list of WaveData objects that wrap values required by WaveType contract</li>

                </ol>

                <p>Hereafter you will fin an example of service call with only one arguments passed:</p>
                <macro name="include">
                    <param name="source"
                           value="showcase/analyzer/src/main/java/org/jrebirth/af/showcase/analyzer/command/OpenEventTrackerFileCommand.java"/>
                    <param name="snippet" value="re:returnData"/>
                    <param name="snippet-end-offset" value="2"/>
                </macro>

            </subsection>

            <subsection name="Process the Service Result">

                <p>The Service Feature Result is sent as a Wave that wrap returned value. So to be informed when the
                    result is available,
                    there is two things to do :
                </p>
                <ul>
                    <li>Let your component listening this WaveType.</li>
                    <li>Add Wave handler code to process the result.</li>
                </ul>

                <p>Each JRebirth's Component are able to listen some WaveType's waves by calling the
                    <strong>listen</strong>
                    method with one or several Wave Types.
                    <br/>
                    This call must be done into one of the following method according to component used:
                    
                </p>
                
                <ul>
                <li><em>initCommand</em> : for Command classes</li>
                <li><em>initService</em> : for Service classes</li>
                <li><em>initModel</em> : for Model classes</li>
                </ul>
                
                <p>Each initXXX method is called into JRebirth Internal Thread by ready method.</p>

                <macro name="include">
                    <param name="source"
                           value="showcase/analyzer/src/main/java/org/jrebirth/af/showcase/analyzer/ui/controls/ControlsModel.java"/>
                    <param name="snippet" value="aj:..ControlsModel.initModel(..)"/>
                </macro>

                <p>Add a method that suit the WaveType convention.
                    <br/>
                    The name must used the predefined prefix (in our case DO_ converted to do), then the WaveType's name
                    converted in a camel cased format.
                    <br/>
                    Method parameters must be compliant with Wave Items defined into the Wave Type.
                    <br/>

                    A final parameter must be added, the Wave itself taht could be useful to get extra data,
                    for example when chained waves are used.

                </p>

                <macro name="include">
                    <param name="source"
                           value="showcase/analyzer/src/main/java/org/jrebirth/af/showcase/analyzer/ui/controls/ControlsModel.java"/>
                    <param name="snippet" value="aj:..ControlsModel.doEventsLoaded(..)"/>
                </macro>

            </subsection>

        </section>


        <section name="Threading ">

            <subsection name="Which Threads are involved ?">
            
            <p>
            All communications with Service Component is done into <b>JIT</b> and all Service Tasks are performed 
            into one slot of <b>JTP</b> or <b>HPTP</b> according to priority defined with annotation.
            </p>

            </subsection>

            <subsection name="Threading Priority">

                <p>Each Service feature call will be processed by the
                    <b>JTP</b>
                    (JRebirth Thread Pool) or by the
                    <b>HPTP</b>
                    (High Priority Thread Pool) according to their predefined priority.
                    <br/>
                    By default the
                    <b>Priority</b>
                    is set to PriorityLevel.Low (a level below Normal)
                    to let other task to be performed
                    into JTP before Service feature calls (like Command).
                </p>

                <p>Its possible to increase or decrease this value by adding an annotation on the Service Feature method
                    like this:
                </p>

                <macro name="include">
                    <param name="source"
                           value="showcase/analyzer/src/main/java/org/jrebirth/af/showcase/analyzer/service/LoadEdtFileService.java"/>
                    <param name="snippet" value="re:doLoadEvents"/>
                    <param name="snippet-start-offset" value="1"/>
                </macro>

            </subsection>

            <subsection name="Follow Task progression">

                <p>
                    Each Service Task are able to update a progress bar with integer value and message.
                    In both cases you must provide the wave provided as a method argument, it will be used to link the
                    associated
                    <b>ServiceTask</b>
                    and find the right
                    <b>ProgressBar</b>
                    and
                    <b>Text</b>
                    widgets to update.
                    <br/>
                    You can update the message test by calling this method:
                </p>
                <macro name="include">
                    <param name="source"
                           value="showcase/analyzer/src/main/java/org/jrebirth/af/showcase/analyzer/service/LoadEdtFileService.java"/>
                    <param name="snippet" value="re:updateMessage"/>
                </macro>
                <p>
                    You can update progress bar indicator by calling this method:
                </p>


                <macro name="include">
                    <param name="source"
                           value="showcase/analyzer/src/main/java/org/jrebirth/af/showcase/analyzer/service/LoadEdtFileService.java"/>
                    <param name="snippet" value="re:updateProgress"/>
                </macro>


            </subsection>

        </section>

        <div class="bottomLinks">
            <div class="previousDocPage">
                <a href="Notifier.html">Commands</a>
            </div>
            <div class="nextDocPage">
                <a href="Ui.html">User Interface</a>
            </div>
            <div class="tocDocPage">
                <a href="Toc.html">TOC</a>
            </div>
        </div>

    </body>
</document> 	